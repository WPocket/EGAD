openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080/
    description: Generated server url
paths:
  /rel/insertOne/{table}:
    post:
      tags:
        - relational-rest
      operationId: insertOne
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EntryPair'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/insertMany/{table}:
    post:
      tags:
        - relational-rest
      operationId: insertMany
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: array
                items:
                  $ref: '#/components/schemas/EntryPair'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/{max}/table={table}&value={value}:
    get:
      tags:
        - relational-rest
      operationId: getKeyMax
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: max
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/{max}/table={table}&value={value}&where={where}:
    get:
      tags:
        - relational-rest
      operationId: getKeyWhereMax
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: where
          in: path
          required: true
          schema:
            type: string
        - name: max
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/{max}/table={table}&value={value}&offset={offset}:
    get:
      tags:
        - relational-rest
      operationId: getKeyOffsetMax
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: path
          required: true
          schema:
            type: string
        - name: max
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/{max}/table={table}&value={value}&offset={offset}&where={where}:
    get:
      tags:
        - relational-rest
      operationId: getKeyOffsetWhereMax
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: path
          required: true
          schema:
            type: string
        - name: where
          in: path
          required: true
          schema:
            type: string
        - name: max
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/{max}/table={table}&multiple={value}:
    get:
      tags:
        - relational-rest
      operationId: getMultipleMax
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
        - name: max
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/{max}/table={table}&multiple={value}&where={where}:
    get:
      tags:
        - relational-rest
      operationId: getMultipleWhere
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
        - name: where
          in: path
          required: true
          schema:
            type: string
        - name: max
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/{max}/table={table}&multiple={value}&offset={offset}:
    get:
      tags:
        - relational-rest
      operationId: getMultipleOffset
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
        - name: offset
          in: path
          required: true
          schema:
            type: string
        - name: max
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/{max}/table={table}&multiple={value}&offset={offset}&where={where}:
    get:
      tags:
        - relational-rest
      operationId: getMultipleWhereOffset
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
        - name: offset
          in: path
          required: true
          schema:
            type: string
        - name: where
          in: path
          required: true
          schema:
            type: string
        - name: max
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/table={table}&value={value}:
    get:
      tags:
        - relational-rest
      operationId: getKey
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/table={table}&value={value}&where={where}:
    get:
      tags:
        - relational-rest
      operationId: getKeyWhere
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: where
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/table={table}&value={value}&offset={offset}:
    get:
      tags:
        - relational-rest
      operationId: getKeyOffset
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/table={table}&value={value}&offset={offset}&where={where}:
    get:
      tags:
        - relational-rest
      operationId: getKeyOffsetWhere
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: path
          required: true
          schema:
            type: string
        - name: where
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/table={table}&multiple={value}:
    get:
      tags:
        - relational-rest
      operationId: getMultiple
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/table={table}&multiple={value}&where={where}:
    get:
      tags:
        - relational-rest
      operationId: getMultipleWhere_1
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
        - name: where
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/table={table}&multiple={value}&offset={offset}:
    get:
      tags:
        - relational-rest
      operationId: getMultipleOffset_1
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
        - name: offset
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /rel/select/table={table}&multiple={value}&offset={offset}&where={where}:
    get:
      tags:
        - relational-rest
      operationId: getMultipleWhereOffset_1
      parameters:
        - name: table
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
        - name: offset
          in: path
          required: true
          schema:
            type: string
        - name: where
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/{index}/type/key={key}:
    get:
      tags:
        - kv-rest-index
      operationId: getType
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/{index}/setex/key={key}&value={value}&t={time}:
    get:
      tags:
        - kv-rest-index
      operationId: setEx
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: time
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/{index}/set/key={key}&value={value}:
    get:
      tags:
        - kv-rest-index
      operationId: setKey
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/{index}/incrby/key={key}&incr={incr}:
    get:
      tags:
        - kv-rest-index
      operationId: incr
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: incr
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/{index}/incr/key={key}:
    get:
      tags:
        - kv-rest-index
      operationId: incr_1
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/{index}/getMul/key={key}:
    get:
      tags:
        - kv-rest-index
      operationId: getMultiple_1
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/{index}/get/key={key}:
    get:
      tags:
        - kv-rest-index
      operationId: getKey_1
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/{index}/expire/key={key}&t={time}:
    get:
      tags:
        - kv-rest-index
      operationId: expire
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: time
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/{index}/exists/key={key}:
    get:
      tags:
        - kv-rest-index
      operationId: exists
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/{index}/del/key={key}:
    get:
      tags:
        - kv-rest-index
      operationId: del
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/{index}/addMul/key={key}&value={value}:
    get:
      tags:
        - kv-rest-index
      operationId: addMul
      parameters:
        - name: index
          in: path
          required: true
          schema:
            type: string
        - name: key
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
        - name: value
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/type/key={key}:
    get:
      tags:
        - kv-rest
      operationId: getType_1
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/setex/key={key}&value={value}&t={time}:
    get:
      tags:
        - kv-rest
      operationId: setEx_1
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
        - name: time
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/set/key={key}&value={value}:
    get:
      tags:
        - kv-rest
      operationId: setKey_1
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: value
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/incrby/key={key}&incr={incr}:
    get:
      tags:
        - kv-rest
      operationId: incr_2
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: incr
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/incr/key={key}:
    get:
      tags:
        - kv-rest
      operationId: incr_3
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/getMul/key={key}:
    get:
      tags:
        - kv-rest
      operationId: getMultiple_2
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/get/key={key}:
    get:
      tags:
        - kv-rest
      operationId: getKey_2
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/expire/key={key}&t={time}:
    get:
      tags:
        - kv-rest
      operationId: expire_1
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: time
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/exists/key={key}:
    get:
      tags:
        - kv-rest
      operationId: exists_1
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/del/key={key}:
    get:
      tags:
        - kv-rest
      operationId: del_1
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /kv/addMul/key={key}&value={value}:
    get:
      tags:
        - kv-rest
      operationId: addMul_1
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
        - name: value
          in: path
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /greeting:
    get:
      tags:
        - greeting-controller
      operationId: greeting
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
            default: World
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Greeting'
components:
  schemas:
    EntryPair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    Greeting:
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
